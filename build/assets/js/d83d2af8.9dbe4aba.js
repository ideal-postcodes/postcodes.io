"use strict";(self.webpackChunkpostcodes_io=self.webpackChunkpostcodes_io||[]).push([[7795],{23510:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"outcode/lookup","title":"Lookup an Outward Code","description":"This endpoint allows you to retrieve detailed information about a UK outward code (the first half of a postcode).","source":"@site/docs/outcode/lookup.mdx","sourceDirName":"outcode","slug":"/outcode/lookup","permalink":"/docs/outcode/lookup","draft":false,"unlisted":false,"editUrl":"https://github.com/ideal-postcodes/postcodes.io/docs/outcode/lookup.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Lookup","title":"Lookup an Outward Code"},"sidebar":"docsSidebar","previous":{"title":"Outward Code Schema","permalink":"/docs/outcode/schema"},"next":{"title":"Reverse Geocode","permalink":"/docs/outcode/reverse-geocode"}}');var s=o(74848),a=o(28453);const d={sidebar_label:"Lookup",title:"Lookup an Outward Code"},r=void 0,i={},c=[{value:"Endpoint",id:"endpoint",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Example Response",id:"example-response",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This endpoint allows you to retrieve detailed information about a UK outward code (the first half of a postcode)."}),"\n",(0,s.jsx)(n.p,{children:"A successful request returns HTTP status code 200 and a JSON object containing comprehensive outward code data."}),"\n",(0,s.jsx)(n.p,{children:"If the outward code is not found, the API returns a 404 response."}),"\n",(0,s.jsxs)(n.p,{children:["For more details, see the ",(0,s.jsx)(n.a,{href:"/docs/api/find-outcode",children:"API Documentation"})]}),"\n",(0,s.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET https://api.postcodes.io/outcodes/:outcode\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example-request",children:"Example Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET https://api.postcodes.io/outcodes/BR8\n"})}),"\n",(0,s.jsx)(n.p,{children:'The above would match any of these inputs: "BR8", "br8", "Br8", etc.'}),"\n",(0,s.jsx)(n.h2,{id:"example-response",children:"Example Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "status": 200,\n  "result": {\n    "outcode": "BR8",\n    "longitude": 0.17398827115555,\n    "latitude": 51.41300203259024,\n    "northings": 170105,\n    "eastings": 551032,\n    "admin_district": [\n      "Sevenoaks",\n      "Bromley"\n    ],\n    "parish": [\n      "Eynsford",\n      "Hextable",\n      "Swanley"\n    ],\n    "admin_county": [\n      "Kent"\n    ],\n    "admin_ward": [\n      "Hextable",\n      "Swanley St. Mary\'s",\n      "Crockenhill and Well Hill"\n    ],\n    "country": [\n      "England"\n    ],\n    "parliamentary_constituency": [\n      "Sevenoaks",\n      "Orpington"\n    ],\n    "parliamentary_constituency_2024": [\n      "Sevenoaks",\n      "Orpington"\n    ]\n  }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>r});var t=o(96540);const s={},a=t.createContext(s);function d(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);