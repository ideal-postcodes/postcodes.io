"use strict";(self.webpackChunkpostcodes_io=self.webpackChunkpostcodes_io||[]).push([[1640],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}},78993:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"postcode/bulk-reverse-geocode","title":"Bulk Reverse Geocode Postcodes","description":"Translates multiple geographic coordinates (longitude/latitude) into postcodes in a single request. This endpoint returns the nearest postcodes for each set of coordinates provided.","source":"@site/docs/postcode/bulk-reverse-geocode.mdx","sourceDirName":"postcode","slug":"/postcode/bulk-reverse-geocode","permalink":"/docs/postcode/bulk-reverse-geocode","draft":false,"unlisted":false,"editUrl":"https://github.com/ideal-postcodes/postcodes.io/docs/postcode/bulk-reverse-geocode.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Bulk Reverse Geocode","title":"Bulk Reverse Geocode Postcodes"},"sidebar":"docsSidebar","previous":{"title":"Reverse Geocode","permalink":"/docs/postcode/reverse-geocode"},"next":{"title":"Outward Code Schema","permalink":"/docs/outcode/schema"}}');var i=t(74848),r=t(28453);const d={sidebar_label:"Bulk Reverse Geocode",title:"Bulk Reverse Geocode Postcodes"},o=void 0,l={},a=[{value:"Endpoint",id:"endpoint",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Example Response",id:"example-response",level:2},{value:"Request Parameters",id:"request-parameters",level:2},{value:"Optional Query Parameters",id:"optional-query-parameters",level:2},{value:"Optional Geolocation Object Parameters",id:"optional-geolocation-object-parameters",level:2},{value:"Response Details",id:"response-details",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Translates multiple geographic coordinates (longitude/latitude) into postcodes in a single request. This endpoint returns the nearest postcodes for each set of coordinates provided."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"POST https://api.postcodes.io/postcodes\n"})}),"\n",(0,i.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"POST https://api.postcodes.io/postcodes\n"})}),"\n",(0,i.jsx)(n.h2,{id:"example-request",children:"Example Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'POST https://api.postcodes.io/postcodes HTTP/1.1\nContent-Type: application/json\n\n{\n  "geolocations": [\n    {\n      "longitude": -3.15807731271522,\n      "latitude": 51.4799900627036\n    },\n    {\n      "longitude": -1.12935802905177,\n      "latitude": 50.7186356978817,\n      "radius": 500,\n      "limit": 5\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example-response",children:"Example Response"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "status": 200,\n  "result": [\n    {\n      "query": {\n        "longitude": -3.15807731271522,\n        "latitude": 51.4799900627036\n      },\n      "result": [\n        {\n          "postcode": "CF24 4NP",\n          "quality": 1,\n          "eastings": 319509,\n          "northings": 176396,\n          "country": "Wales",\n          "nhs_ha": "Cardiff and Vale University Health Board",\n          "longitude": -3.15807731271522,\n          "latitude": 51.4799900627036,\n          "european_electoral_region": "Wales",\n          "primary_care_trust": "Cardiff",\n          "region": null,\n          "lsoa": "Cardiff 037D",\n          "msoa": "Cardiff 037",\n          "incode": "4NP",\n          "outcode": "CF24",\n          "parliamentary_constituency": "Cardiff Central",\n          "parliamentary_constituency_2024": "Cardiff Central",\n          "admin_district": "Cardiff",\n          "parish": null,\n          "admin_county": null,\n          "date_of_introduction": "198001",\n          "admin_ward": "Cathays",\n          "distance": 0,\n          "codes": {\n            "admin_district": "W06000015",\n            "admin_ward": "W05001958",\n            "parliamentary_constituency": "W07000023",\n            "parliamentary_constituency_2024": "W07000023",\n            "ccg": "W11000029",\n            "nuts": "TLL23",\n            "lsoa": "W01001770",\n            "msoa": "W02000489",\n            "lau2": "W06000015"\n          }\n        },\n        {\n          "postcode": "CF24 4NY",\n          "quality": 1,\n          "eastings": 319585,\n          "northings": 176479,\n          "country": "Wales",\n          "distance": 110.2\n          // Additional fields omitted for brevity\n        }\n        // Additional results omitted for brevity\n      ]\n    },\n    {\n      "query": {\n        "longitude": -1.12935802905177,\n        "latitude": 50.7186356978817,\n        "radius": 500,\n        "limit": 5\n      },\n      "result": [\n        {\n          "postcode": "PO31 7HB",\n          "quality": 1,\n          "eastings": 447671,\n          "northings": 95255,\n          "country": "England",\n          "nhs_ha": "South Central",\n          "longitude": -1.12935802905177,\n          "latitude": 50.7186356978817,\n          "distance": 0\n          // Additional fields omitted for brevity\n        }\n        // Additional results omitted for brevity\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,i.jsx)(n.p,{children:"This endpoint requires a JSON object containing an array of geolocation objects:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Constraints"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"geolocations"})}),(0,i.jsx)(n.td,{children:"Array of geolocation objects"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Maximum 100 objects"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"longitude"})}),(0,i.jsx)(n.td,{children:"Longitude coordinate"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Valid longitude value"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"latitude"})}),(0,i.jsx)(n.td,{children:"Latitude coordinate"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Valid latitude value"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"You can include up to 100 geolocation objects in a single request."}),"\n",(0,i.jsx)(n.p,{children:"Example JSON body:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "geolocations": [\n    {\n      "longitude": -0.32824866,\n      "latitude": 51.44344409\n    },\n    {\n      "longitude": -0.20864309,\n      "latitude": 51.42001847\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"optional-query-parameters",children:"Optional Query Parameters"}),"\n",(0,i.jsx)(n.p,{children:"These parameters can be applied globally to all geolocations in the request:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Constraints"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"limit"})}),(0,i.jsx)(n.td,{children:"Maximum number of postcodes to return for each location"}),(0,i.jsx)(n.td,{children:"10"}),(0,i.jsx)(n.td,{children:"Must be less than 100"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"radius"})}),(0,i.jsx)(n.td,{children:"Search radius in metres"}),(0,i.jsx)(n.td,{children:"100"}),(0,i.jsx)(n.td,{children:"Must be less than 2,000m"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"widesearch"})}),(0,i.jsx)(n.td,{children:"When true, extends search radius up to 20km"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"Returns maximum of 10 results"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Example with global parameters:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"POST https://api.postcodes.io/postcodes?radius=200&limit=5\n"})}),"\n",(0,i.jsx)(n.h2,{id:"optional-geolocation-object-parameters",children:"Optional Geolocation Object Parameters"}),"\n",(0,i.jsx)(n.p,{children:"These parameters can be specified for individual geolocation objects:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Constraints"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"limit"})}),(0,i.jsx)(n.td,{children:"Maximum number of postcodes to return for this location"}),(0,i.jsx)(n.td,{children:"10"}),(0,i.jsx)(n.td,{children:"Must be less than 100"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"radius"})}),(0,i.jsx)(n.td,{children:"Search radius in metres for this location"}),(0,i.jsx)(n.td,{children:"100"}),(0,i.jsx)(n.td,{children:"Must be less than 2,000m"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"widesearch"})}),(0,i.jsx)(n.td,{children:"When true, extends search radius up to 20km"}),(0,i.jsx)(n.td,{children:"false"}),(0,i.jsx)(n.td,{children:"Returns maximum of 10 results"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"filter"})}),(0,i.jsx)(n.td,{children:"Comma-separated list of fields to return"}),(0,i.jsx)(n.td,{children:"All fields"}),(0,i.jsxs)(n.td,{children:["e.g. ",(0,i.jsx)(n.code,{children:"postcode,longitude,latitude"})]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Individual parameters override global parameters for the specific geolocation object."}),"\n",(0,i.jsx)(n.h2,{id:"response-details",children:"Response Details"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Each geolocation query returns an array of matching postcodes"}),"\n",(0,i.jsx)(n.li,{children:"Results are sorted by distance (nearest first)"}),"\n",(0,i.jsxs)(n.li,{children:["Each result includes a ",(0,i.jsx)(n.code,{children:"distance"})," field showing meters from the query point"]}),"\n",(0,i.jsxs)(n.li,{children:["If no postcodes are found within the radius, ",(0,i.jsx)(n.code,{children:"result"})," will be an empty array"]}),"\n",(0,i.jsxs)(n.li,{children:["If a geolocation is invalid, ",(0,i.jsx)(n.code,{children:"result"})," will be null"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);