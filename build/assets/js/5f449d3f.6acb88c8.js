"use strict";(self.webpackChunkpostcodes_io=self.webpackChunkpostcodes_io||[]).push([[6274],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var o=t(96540);const a={},s=o.createContext(a);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},68414:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"postcode/random","title":"Retrieve a Random Postcode","description":"This endpoint returns a random postcode and all available data for that postcode from the database.","source":"@site/docs/postcode/random.mdx","sourceDirName":"postcode","slug":"/postcode/random","permalink":"/docs/postcode/random","draft":false,"unlisted":false,"editUrl":"https://github.com/ideal-postcodes/postcodes.io/docs/postcode/random.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Random","title":"Retrieve a Random Postcode"},"sidebar":"docsSidebar","previous":{"title":"Bulk Lookup","permalink":"/docs/postcode/bulk"},"next":{"title":"Autocomplete","permalink":"/docs/postcode/autocomplete"}}');var a=t(74848),s=t(28453);const r={sidebar_label:"Random",title:"Retrieve a Random Postcode"},d=void 0,i={},c=[{value:"Endpoint",id:"endpoint",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Example Response",id:"example-response",level:2},{value:"Optional Query Parameters",id:"optional-query-parameters",level:2},{value:"Example Request With Optional Parameter",id:"example-request-with-optional-parameter",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This endpoint returns a random postcode and all available data for that postcode from the database."}),"\n",(0,a.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"GET https://api.postcodes.io/random/postcodes\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example-request",children:"Example Request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://api.postcodes.io/random/postcodes\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example-response",children:"Example Response"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "status": 200,\n  "result": {\n    "postcode": "CM8 3ET",\n    "quality": 1,\n    "eastings": 581513,\n    "northings": 213555,\n    "country": "England",\n    "nhs_ha": "East of England",\n    "longitude": 0.635575,\n    "latitude": 51.810886,\n    "european_electoral_region": "Eastern",\n    "primary_care_trust": "Mid Essex",\n    "region": "East of England",\n    "lsoa": "Braintree 017C",\n    "msoa": "Braintree 017",\n    "incode": "3ET",\n    "outcode": "CM8",\n    "parliamentary_constituency": "Witham",\n    "parliamentary_constituency_2024": "Witham",\n    "admin_district": "Braintree",\n    "parish": "Witham",\n    "admin_county": "Essex",\n    "date_of_introduction": "198001",\n    "admin_ward": "Witham South",\n    "ced": "Witham Southern",\n    "ccg": "NHS Mid and South Essex",\n    "nuts": "Essex Haven Gateway",\n    "pfa": "Essex",\n    "codes": {\n      "admin_district": "E07000067",\n      "admin_county": "E10000012",\n      "admin_ward": "E05012480",\n      "parish": "E04012935",\n      "parliamentary_constituency": "E14000951",\n      "parliamentary_constituency_2024": "E14000951",\n      "ccg": "E38000106",\n      "ccg_id": "06Q",\n      "ced": "E58000295",\n      "nuts": "TLH33",\n      "lsoa": "E01033460",\n      "msoa": "E02004470",\n      "lau2": "E07000067",\n      "pfa": "E23000028"\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"optional-query-parameters",children:"Optional Query Parameters"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Required"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"outcode"})}),(0,a.jsx)(n.td,{children:"No"}),(0,a.jsx)(n.td,{children:'Filters random postcodes by outcode (e.g., "CM8", "SW1"). Returns null if an invalid outcode is provided.'})]})})]}),"\n",(0,a.jsx)(n.h2,{id:"example-request-with-optional-parameter",children:"Example Request With Optional Parameter"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://api.postcodes.io/random/postcodes?outcode=SW1\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);