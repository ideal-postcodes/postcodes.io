"use strict";(self.webpackChunkpostcodes_io=self.webpackChunkpostcodes_io||[]).push([[5254],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(96540);const d={},r=s.createContext(d);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},68122:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"postcode/reverse-geocode","title":"Reverse Geocode a Postcode","description":"This endpoint returns the nearest postcodes for a given longitude and latitude coordinate pair.","source":"@site/docs/postcode/reverse-geocode.mdx","sourceDirName":"postcode","slug":"/postcode/reverse-geocode","permalink":"/docs/postcode/reverse-geocode","draft":false,"unlisted":false,"editUrl":"https://github.com/ideal-postcodes/postcodes.io/docs/postcode/reverse-geocode.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Reverse Geocode","title":"Reverse Geocode a Postcode"},"sidebar":"docsSidebar","previous":{"title":"Nearest","permalink":"/docs/postcode/nearest"},"next":{"title":"Bulk Reverse Geocode","permalink":"/docs/postcode/bulk-reverse-geocode"}}');var d=t(74848),r=t(28453);const i={sidebar_label:"Reverse Geocode",title:"Reverse Geocode a Postcode"},o=void 0,c={},a=[{value:"Endpoint",id:"endpoint",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Example Response",id:"example-response",level:2},{value:"Request Parameters",id:"request-parameters",level:2},{value:"Optional Query Parameters",id:"optional-query-parameters",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:"This endpoint returns the nearest postcodes for a given longitude and latitude coordinate pair."}),"\n",(0,d.jsxs)(n.p,{children:["Each postcode in the results includes a ",(0,d.jsx)(n.code,{children:"distance"})," field that indicates the distance in meters from the specified coordinates to the postcode."]}),"\n",(0,d.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"GET https://api.postcodes.io/postcodes?lon=[longitude]&lat=[latitude]\n"})}),"\n",(0,d.jsx)(n.h2,{id:"example-request",children:"Example Request"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-http",children:"https://api.postcodes.io/postcodes?lon=-0.127&lat=51.507\n"})}),"\n",(0,d.jsx)(n.h2,{id:"example-response",children:"Example Response"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'{\n  "status": 200,\n  "result": [\n    {\n      "postcode": "SW1A 2DD",\n      "quality": 1,\n      "eastings": 530075,\n      "northings": 180339,\n      "country": "England",\n      "nhs_ha": "London",\n      "longitude": -0.127149,\n      "latitude": 51.50702,\n      "european_electoral_region": "London",\n      "primary_care_trust": "Westminster",\n      "region": "London",\n      "lsoa": "Westminster 018C",\n      "msoa": "Westminster 018",\n      "incode": "2DD",\n      "outcode": "SW1A",\n      "parliamentary_constituency": "Cities of London and Westminster",\n      "parliamentary_constituency_2024": "Cities of London and Westminster",\n      "admin_district": "Westminster",\n      "parish": "Westminster, unparished area",\n      "admin_county": null,\n      "date_of_introduction": "198001",\n      "admin_ward": "St James\'s",\n      "ced": null,\n      "ccg": "NHS North West London",\n      "nuts": "Westminster",\n      "pfa": "Metropolitan Police",\n      "codes": {\n        "admin_district": "E09000033",\n        "admin_county": "E99999999",\n        "admin_ward": "E05013806",\n        "parish": "E43000236",\n        "parliamentary_constituency": "E14001172",\n        "parliamentary_constituency_2024": "E14001172",\n        "ccg": "E38000256",\n        "ccg_id": "W2U3Z",\n        "ced": "E99999999",\n        "nuts": "TLI35",\n        "lsoa": "E01004736",\n        "msoa": "E02000977",\n        "lau2": "E09000033",\n        "pfa": "E23000001"\n      },\n      "distance": 10.58165325\n    }\n    // Truncated for brevity\n  ]\n}\n'})}),"\n",(0,d.jsx)(n.h2,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Required"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lon"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"The longitude coordinate. Must be a valid WGS84 longitude value between -180 and 180."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"lat"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"The latitude coordinate. Must be a valid WGS84 latitude value between -90 and 90."})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"optional-query-parameters",children:"Optional Query Parameters"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Constraints"}),(0,d.jsx)(n.th,{children:"Example"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"limit"})}),(0,d.jsx)(n.td,{children:"Limits number of postcode matches to return"}),(0,d.jsx)(n.td,{children:"10"}),(0,d.jsx)(n.td,{children:"Maximum value is 100"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"&limit=5"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"radius"})}),(0,d.jsx)(n.td,{children:"Sets search radius in meters"}),(0,d.jsx)(n.td,{children:"100m"}),(0,d.jsx)(n.td,{children:"Maximum value is 2,000m"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"&radius=500"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"widesearch"})}),(0,d.jsxs)(n.td,{children:["Enables a wide area search up to 20km radius, but returns a maximum of 10 results. When set to ",(0,d.jsx)(n.code,{children:"true"}),", any ",(0,d.jsx)(n.code,{children:"radius"})," over 10 and ",(0,d.jsx)(n.code,{children:"limit"})," parameters are ignored"]}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"&widesearch=true"})})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}}}]);