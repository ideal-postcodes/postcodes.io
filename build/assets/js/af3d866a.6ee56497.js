"use strict";(self.webpackChunkpostcodes_io=self.webpackChunkpostcodes_io||[]).push([[4218],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var s=t(96540);const r={},o=s.createContext(r);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:n},e.children)}},79840:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"outcode/nearest","title":"Find Nearest Outcode","description":"Returns a list of outcodes nearest to the specified outcode, ordered by distance.","source":"@site/docs/outcode/nearest.mdx","sourceDirName":"outcode","slug":"/outcode/nearest","permalink":"/docs/outcode/nearest","draft":false,"unlisted":false,"editUrl":"https://github.com/ideal-postcodes/postcodes.io/docs/outcode/nearest.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Nearest","title":"Find Nearest Outcode"},"sidebar":"docsSidebar","previous":{"title":"Reverse Geocode","permalink":"/docs/outcode/reverse-geocode"},"next":{"title":"Place Schema","permalink":"/docs/place/schema"}}');var r=t(74848),o=t(28453);const d={sidebar_label:"Nearest",title:"Find Nearest Outcode"},a=void 0,i={},c=[{value:"Endpoint",id:"endpoint",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Example Response",id:"example-response",level:2},{value:"Optional Query Parameters",id:"optional-query-parameters",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Returns a list of outcodes nearest to the specified outcode, ordered by distance."}),"\n",(0,r.jsxs)(n.p,{children:["All standard outcode fields are returned for each result, plus a ",(0,r.jsx)(n.code,{children:"distance"})," attribute (in metres from the specified outcode); if the input outcode is not found, the API returns a 404 response code."]}),"\n",(0,r.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"GET https://api.postcodes.io/outcodes/:outcode/nearest\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example-request",children:"Example Request"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"https://api.postcodes.io/outcodes/NW1/nearest\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example-response",children:"Example Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": 200,\n  "result": [\n    {\n      "outcode": "NW1",\n      "longitude": -0.139926,\n      "latitude": 51.52825,\n      "northings": 182304,\n      "eastings": 529158,\n      "admin_district": [\n        "Camden",\n        "Westminster",\n        "City of London"\n      ],\n      "parish": [\n        "Camden, unparished area",\n        "Westminster, unparished area",\n        "City of London, unparished area"\n      ],\n      "admin_county": [],\n      "admin_ward": [\n        "Camden Town with Primrose Hill",\n        "Regent\'s Park",\n        "Marylebone High Street",\n        "Hyde Park",\n        "West End",\n        "Holborn and Covent Garden"\n      ],\n      "country": [\n        "England"\n      ],\n      "distance": 0\n    },\n    {\n      "outcode": "WC1",\n      "longitude": -0.118548,\n      "latitude": 51.519358,\n      "northings": 181819,\n      "eastings": 530724,\n      "admin_district": [\n        "Camden",\n        "Islington",\n        "Westminster",\n        "City of London"\n      ],\n      "parish": [\n        "Camden, unparished area",\n        "Islington, unparished area",\n        "Westminster, unparished area",\n        "City of London, unparished area"\n      ],\n      "admin_county": [],\n      "admin_ward": [\n        "King\'s Cross",\n        "Holborn and Covent Garden",\n        "Bloomsbury",\n        "Clerkenwell",\n        "St Pancras and Somers Town",\n        "West End"\n      ],\n      "country": [\n        "England"\n      ],\n      "distance": 1598.694782\n    },\n    {\n      "outcode": "W1",\n      "longitude": -0.14224,\n      "latitude": 51.516759,\n      "northings": 181125,\n      "eastings": 528997,\n      "admin_district": [\n        "Westminster",\n        "Camden"\n      ],\n      "parish": [\n        "Westminster, unparished area",\n        "Camden, unparished area"\n      ],\n      "admin_county": [],\n      "admin_ward": [\n        "Marylebone High Street",\n        "West End",\n        "Bloomsbury"\n      ],\n      "country": [\n        "England"\n      ],\n      "distance": 1750.348773\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"optional-query-parameters",children:"Optional Query Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"limit"})}),(0,r.jsx)(n.td,{children:"Limits number of outcodes to return. Defaults to 10. Maximum allowed is 100."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"radius"})}),(0,r.jsx)(n.td,{children:"Sets search radius in metres. Defaults to 5,000m. Maximum allowed is 25,000m."})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);