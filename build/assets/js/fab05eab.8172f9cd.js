"use strict";(self.webpackChunkpostcodes_io=self.webpackChunkpostcodes_io||[]).push([[3665],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},46713:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"place/query","title":"Query for a Place","description":"Search for places that match a given query string. This endpoint returns a list of matching places with their associated data.","source":"@site/docs/place/query.mdx","sourceDirName":"place","slug":"/place/query","permalink":"/docs/place/query","draft":false,"unlisted":false,"editUrl":"https://github.com/ideal-postcodes/postcodes.io/docs/place/query.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"Query","title":"Query for a Place"},"sidebar":"docsSidebar","previous":{"title":"Lookup","permalink":"/docs/place/lookup"},"next":{"title":"Random","permalink":"/docs/place/random"}}');var s=t(74848),i=t(28453);const a={sidebar_label:"Query",title:"Query for a Place"},d=void 0,o={},l=[{value:"Endpoint",id:"endpoint",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Example Response",id:"example-response",level:2},{value:"Query Parameters",id:"query-parameters",level:2},{value:"Optional Query Parameters",id:"optional-query-parameters",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Search for places that match a given query string. This endpoint returns a list of matching places with their associated data."}),"\n",(0,s.jsx)(n.p,{children:"The search performs prefix matching and returns results in sorted order (case insensitive)."}),"\n",(0,s.jsx)(n.p,{children:"Returns a 200 response with either an empty array or up to 100 matching place entities."}),"\n",(0,s.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"GET https://api.postcodes.io/places?q=[query]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example-request",children:"Example Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"https://api.postcodes.io/places?q=London&limit=3\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example-response",children:"Example Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "status": 200,\n  "result": [\n    {\n      "place_name": "London",\n      "country": "England",\n      "region": "London",\n      "longitude": -0.1245,\n      "latitude": 51.508,\n      "eastings": 530856,\n      "northings": 180392,\n      "admin_district": "Westminster",\n      "admin_county": null,\n      "admin_ward": "St James\'s",\n      "parish": "Westminster, unparished area",\n      "type": "City",\n      "population": 8961989,\n      "codes": {\n        "admin_district": "E09000033",\n        "admin_county": "E99999999",\n        "admin_ward": "E05013806",\n        "parish": "E43000236"\n      }\n    },\n    {\n      "place_name": "London Colney",\n      "country": "England",\n      "region": "East of England",\n      "longitude": -0.2956,\n      "latitude": 51.724,\n      "eastings": 519047,\n      "northings": 204037,\n      "admin_district": "St Albans",\n      "admin_county": "Hertfordshire",\n      "admin_ward": "London Colney",\n      "parish": "London Colney",\n      "type": "Village",\n      "population": 10192,\n      "codes": {\n        "admin_district": "E07000240",\n        "admin_county": "E10000015",\n        "admin_ward": "E05004782",\n        "parish": "E04012147"\n      }\n    },\n    {\n      "place_name": "Londonthorpe",\n      "country": "England",\n      "region": "East Midlands",\n      "longitude": -0.5726,\n      "latitude": 52.9464,\n      "eastings": 495078,\n      "northings": 338752,\n      "admin_district": "South Kesteven",\n      "admin_county": "Lincolnshire",\n      "admin_ward": "Belmont",\n      "parish": "Londonthorpe and Harrowby Without",\n      "type": "Hamlet",\n      "population": 257,\n      "codes": {\n        "admin_district": "E07000141",\n        "admin_county": "E10000019",\n        "admin_ward": "E05005527",\n        "parish": "E04005618"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Constraints"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"q="})}),(0,s.jsx)(n.td,{children:"The search query string"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{children:"String"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"query="})}),(0,s.jsxs)(n.td,{children:["Alias for ",(0,s.jsx)(n.code,{children:"q="})]}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"String"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"optional-query-parameters",children:"Optional Query Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Constraints"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"limit="})}),(0,s.jsx)(n.td,{children:"Maximum number of results to return"}),(0,s.jsx)(n.td,{children:"10"}),(0,s.jsx)(n.td,{children:"Integer, max 100"})]})})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);