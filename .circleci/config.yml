---
default_steps: &default_steps
  steps:
    - run:
        command: "dockerize -wait tcp://localhost:5432 -timeout 2m"
        name: "Wait for db"
    - checkout
    - run: "sudo apt-get update"
    - run: "sudo apt install postgresql-client"
    - run: "POSTGRES_USER=postgres npm run setup_test_db"
    - restore_cache:
        keys:
          - 'nodemodules-deps-{{ checksum "package-lock.json" }}'
    - run: "npm install"
    - save_cache:
        key: 'nodemodules-deps-{{ checksum "package-lock.json" }}'
        paths:
          - node_modules/
    - run: "npm run build"
    - run: "npm run test"
    - run: "npm run coverage"
jobs:
  node10:
    <<: *default_steps
    docker:
      - environment:
          - PGHOST=localhost
          - PGUSER=postgres
        image: "circleci/node:10"
      - image: "circleci/postgres:10-alpine-postgis"
  node12:
    <<: *default_steps
    docker:
      - environment:
          - PGHOST=localhost
          - PGUSER=postgres
        image: "circleci/node:12"
      - image: "circleci/postgres:10-alpine-postgis"
  node14:
    <<: *default_steps
    docker:
      - environment:
          - PGHOST=localhost
          - PGUSER=postgres
        image: "circleci/node:14"
      - image: "circleci/postgres:10-alpine-postgis"
version: 2
workflows:
  supported_nodes:
    jobs:
      - node14
      - node10
      - node12
  version: 2
