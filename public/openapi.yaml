openapi: 3.0.3
info:
  version: 3.5.1
  license:
    name: AGPLv3
    url: https://opensource.org/licenses/AGPL-3.0
  title: API Reference - Postcodes.io
  termsOfService: https://postcodes.io/about
  description: >-
    # Overview


    Postcodes.io is a free postcode lookup API and geocoder for the UK


    ## Endpoint

    All services can be accessed from the following HTTP[S] endpoint


    `https://api.postcodes.io`

    The API accepts GET and POST requests. POST methods use content type
    application/json


    ## Responses

    JSON(P) only. CORS is enabled.


    Each response comes with an appropriate HTTP Status code (except for JSONP
    requests). These include 200 for success, 400 for a bad request, 404 for not
    found and 500 for server error. The HTTP Status code is also included in the
    response body.


    ## Authentication

    Postcodes.io does not require any authentication.


    ## Versioning

    The API currently does not use any form of versioning. Any changes to the
    API will be backwards-compatible, this includes: adding new properties to
    responses, adding new endpoints, adding new optional request parameters and
    changing the order of properties.


    If we make backwards-incompatible changes in the future, this will be
    released under a versioned endpoint.
  contact:
    email: support@ideal-postcodes.co.uk
    name: Support
    url: https://ideal-postcodes.co.uk/support
externalDocs:
  description: More on our APIs, libraries with guides and examples
  url: https://docs.ideal-postcodes.co.uk/postcodesio
servers:
  - url: https://api.postcodes.io
    description: API Server
    variables: {}
tags:
  - name: Postcode Lookup
    description: Search for UK postcodes
  - name: Outward Postcodes
    description: Search by UK outward codes
  - name: Places Search
    description: Search UK places
x-tagGroups:
  - name: Address Search
    tags:
      - Address Search
      - UK
  - name: Place Search
    tags:
      - Place Search
paths:
  /postcodes/{postcode}:
    get:
      tags:
        - UK
      summary: Lookup Postcode
      operationId: Postcodes
      description: >
        Returns the complete list of addresses for a postcode. Postcode searches
        are space and case insensitive.


        The Postcode Lookup API provides a JSON interface to search UK addresses
        from a postcode. It can be used to power Postcode Lookup driven address
        searches, like [Postcode Lookup](/postcode-lookup).


        ## Postcode Not Found


        Lookup balance is unaffected by invalid postcodes. The API returns a
        `404` response with response body:


        ```json

        {
          "code": 4040,
          "message": "Postcode not found",
          "suggestions": ["SW1A 0AA"]
        }

        ```


        ### Suggestions


        If a postcode cannot be found, the API will provide up to 5 closest
        matching postcodes. Common errors will be corrected first (e.g. mixing
        up `O` and `0` or `I` and `1`).


        If the suggestion list is small (fewer than 3), there is a high
        probability the correct postcode is there. You may notify the user or
        immediately trigger new searches.


        The suggestion list will be empty if the postcode has deviated too far
        from a valid postcode format.


        ## Multiple Residence


        A small number of postcodes will return more than 100 premises. These
        may require pagination. Use `page` to paginate the result set.
      parameters:
        - name: postcode
          in: path
          description: Postcode to retrieve
          required: true
          style: simple
          explode: false
          schema:
            title: Postcode
            description: Postcode to query
            example: SW1A 2AA
        - name: filter
          in: query
          style: form
          required: false
          explode: false
          schema:
            $ref: '#/components/schemas/FilterParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostcodeResponse'
      x-codeSamples:
        - lang: http
          label: URL
          source: |
            https://api.postcodes.io/postcodes/SW1A2AA
        - lang: cURL
          label: CLI
          source: |
            curl -G -k \
            --url 'https://api.postcodes.io/postcodesSW1A2AA'
  /places:
    get:
      tags:
        - Place Search
      summary: Find Place
      description: >
        Query for geographical places across countries. Each query will return a
        list of place suggestions, which consists of a place name, descriptive
        name and id.


        This API returns geographical information such as countries, capitals,
        administrative areas and more. It is ideal for correctly identifying a
        place along with any other details like geolocation.


        ## Implementing Place Autocomplete


        Extracting the full information of a place is a 2 step process:


        1. Retrieve place suggestions via /places

        2. Retrieve the entire place with the ID provided in the suggestion


        ## Suggestion Format


        Each place suggestion contains a descriptive name which you can provide
        to users to uniquely idenfity a place.


        ## Rate Limiting


        You can make up to 3000 requests to the autocomplete API within a 5
        minute span. The HTTP Header contains information on your current rate
        limit.


        | Header                  |
        Description                                                                           
        |

        | ----------------------- |
        --------------------------------------------------------------------------------------
        |

        | `X-RateLimit-Limit`     | The maximum number of requests that can be
        made in 5 minutes                           |

        | `X-RateLimit-Remaining` | The remaining requests within the current
        rate limit window                            |

        | `X-RateLimit-Reset`     | The time when the rate limit window resets
        in Unix Time (seconds) or UTC Epoch seconds |


        ## Pricing


        This API currently does not affect your balance. However, resolving a
        suggestion into a full place requires a paid request.


        Please note, this API is not intended as a standalone free resource.
        Integrations that consistently make autocomplete requests without a paid
        request to resolve an place may be disrupted via tightened rate limits.
      operationId: FindPlace
      parameters:
        - name: api_key
          in: query
          style: form
          required: true
          explode: false
          schema:
            $ref: '#/components/schemas/ApiKeyParam'
        - name: query
          in: query
          description: >-
            Specifies the place you wish to query. Query can be shortened to
            `q=`
          style: form
          explode: false
          schema:
            type: string
        - name: country_iso
          in: query
          style: form
          explode: false
          schema:
            $ref: '#/components/schemas/CountryIsoParam'
        - name: bias_country_iso
          in: query
          style: form
          explode: false
          schema:
            $ref: '#/components/schemas/BiasCountryIsoParam'
        - name: bias_lonlat
          in: query
          style: form
          explode: false
          schema:
            $ref: '#/components/schemas/BiasLonLatParam'
        - name: bias_ip
          in: query
          style: form
          explode: false
          schema:
            $ref: '#/components/schemas/BiasIpParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
      x-codeSamples:
        - lang: http
          label: URL
          source: >
            https://api.ideal-postcodes.co.uk/v1/places?api_key=ak_test&query=london
        - lang: cURL
          label: CLI
          source: |
            curl -k -G 'https://api.ideal-postcodes.co.uk/v1/places' \
              -d 'api_key=ak_test' \
              --data-urlencode 'query=london'
components:
  schemas:
    FilterParam:
      title: Filter
      type: string
      description: >
        Comma separated whitelist of address elements to return. 


        E.g. `filter=line_1,line_2,line_3` returns only `line_1`, `line_2` and
        `line_3` address elements in your response
      example: line_1,line_2,line_3
    Postcode:
      required:
        - postcode
        - outcode
        - incode
        - quality
        - eastings
        - northings
        - country
        - nhs_ha
        - admin_county
        - admin_district
        - admin_ward
        - longitude
        - latitude
        - parliamentary_constituency
        - european_electoral_region
        - primary_care_trust
        - region
        - parish
        - lsoa
        - msoa
        - ced
        - ccg
        - nuts
        - codes
      properties:
        postcode:
          title: Postcode
          type: string
          description: >-
            All current ('live') postcodes within the United Kingdom, the
            Channel Islands and the Isle of Man, received monthly from Royal
            Mail. 2, 3 or 4-character outward code, single space and 3-character
            inward code.
          example: SW1A 2AA
        outcode:
          title: Outward Code
          type: string
          description: >-
            The outward code is the part of the postcode before the single space
            in the middle. It is between two and four characters long. A few
            outward codes are non-geographic, not divulging where mail is to be
            sent.
          example: SW1A
        incode:
          title: Inward Code
          type: string
          description: >-
            The inward part is the part of the postcode after the single space
            in the middle. It is three characters long. The inward code assists
            in the delivery of post within a postal district.
          example: 1AA
        quality:
          title: Positional Quality
          type: integer
          description: >-
            Shows the status of the assigned grid reference.

            1 = within the building of the matched address closest to the
            postcode mean

            2 = as for status value 1, except by visual inspection of Landline
            maps (Scotland only)

            3 = approximate to within 50m

            4 = postcode unit mean (mean of matched addresses with the same
            postcode, but not snapped to a building)

            5 = imputed by ONS, by reference to surrounding postcode grid
            references

            6 = postcode sector mean, (mainly | PO Boxes)

            8 = postcode terminated prior to Gridlink® initiative, last known
            ONS postcode grid reference1

            9 = no grid reference available
          example: '1'
        eastings:
          title: Eastings
          type: integer|null
          description: >-
            The Ordnance Survey postcode grid reference Easting to 1 metre
            resolution. Grid references for postcodes in Northern Ireland relate
            to the Irish Grid system. May be null if geolocation not available.
          example: '530047'
        northings:
          title: Northings
          type: integer|null
          description: >-
            The Ordnance Survey postcode grid reference Northing to 1 metre
            resolution. Grid references for postcodes in Northern Ireland relate
            to the Irish Grid system. May be null if geolocation not available.
          example: '179951'
        country:
          title: Country
          type: string
          description: >-
            The country (i.e. one of the four constituent countries of the
            United Kingdom or the Channel Islands or the Isle of Man) to which
            each postcode is assigned.
          example: England, Wales, Scotland, Channel Islands, Isle of Man
        nha_ha:
          title: Strategic Health Authority
          type: string
          x-nullable: true
          description: The health area code for the postcode.
          example: London
        admin_county:
          title: County
          type: string
          x-nullable: true
          description: The current county to which the postcode has been assigned.
          example: ''
        admin_district:
          title: District
          type: string
          x-nullable: true
          description: >-
            The current district/unitary authority to which the postcode has
            been assigned.
          example: Westminster
        admin_ward:
          title: Ward
          type: string|null
          description: >-
            The current administrative/electoral area to which the postcode has
            been assigned.
          example: St. James's
        longitude:
          title: Longitude
          type: double float|null
          description: >-
            The WGS84 longitude given the Postcode's national grid reference.
            May be null if geolocation not available.
          example: '-0.12767'
        latitude:
          title: Latitude
          type: double float|null
          description: >-
            The WGS84 latitude given the Postcode's national grid reference. May
            be null if geolocation not available.
          example: '51.503541'
        parliamentary_constituency:
          title: Westminster Parliamentary Constituency
          type: string|null
          description: The Westminster Parliamentary Constituency code for each postcode.
          example: Cities of London and Westminster
        european_electoral_region:
          title: European Electoral Region (EER)
          type: string|null
          description: The European Electoral Region code for each postcode.
          example: London
        primary_care_trust:
          title: Primary Care Trust (PCT)
          type: string|null
          description: >-
            The code for the Primary Care areas in England, LHBs in Wales, CHPs
            in Scotland, LCG in Northern Ireland and PHD in the Isle of Man;
            there are no equivalent areas in the Channel Islands. Care Trust/
            Care Trust Plus (CT)/ local health board (LHB)/ community health
            partnership (CHP)/ local commissioning group (LCG)/ primary
            healthcare directorate (PHD).
          example: Westminster
        region:
          title: Region (formerly GOR)
          type: string|null
          description: >-
            The Region code for each postcode. The nine GORs were abolished on 1
            April 2011 and are now known as ‘Regions’. They were the primary
            statistical subdivisions of England and also the areas in which the
            Government Offices for the Regions fulfilled their role. Each GOR
            covered a number of local authorities.
          example: London
        parish:
          title: Parish (England)/community (Wales)
          type: string|null
          description: >-
            The smallest type of administrative area in England is the parish
            (also known as 'civil parish'); the equivalent units in Wales are
            communities.
          example: Westminster, unparished area
        lsoa:
          title: 2011 Census lower layer super output area (LSOA)
          type: string
          x-nullable: true
          description: >-
            The 2011 Census lower layer SOA code for England and Wales, SOA code
            for Northern Ireland and data zone code for Scotland.
          example: Westminster 018C
        msoa:
          title: 2011 Census middle layer super output area (MSOA)
          type: string|null
          description: >-
            The 2011 Census middle layer SOA (MSOA) code for England and Wales
            and intermediate zone for Scotland.
          example: Westminster 018
        ced:
          title: County Electoral District
          type: string|null
          description: >-
            The county electoral division code for each English postcode. Pseudo
            codes are included for the remainder of the UK. The field will be
            null for English postcodes with no grid reference. English county
            councils use county electoral divisions (CED) to elect councillors.
            These CEDs must be confined within district boundaries, but need not
            be based on whole electoral wards. The only exceptions are the Isles
            of Scilly and the Greater London Authority (GLA). CEDs do not exist
            within UAs.
          example: ''
        ccg:
          title: Clinical Commissioning Group
          type: string|null
          description: >-
            Clinical commissioning groups (CCGs) are NHS organisations set up by
            the Health and Social Care Act 2012 to organise the delivery of NHS
            services in England.
          example: NHS North West London
        nuts:
          title: >-
            International Terratorial Levels (ITL) (Former Nomenclature of Units
            for Territorial Statistics (NUTS)
          type: string|null
          description: >-
            The national LAU1-equivalent code for each postcode. Pseudo codes
            are included for Channel Islands and Isle of Man. The field will
            otherwise be blank for postcodes with no grid reference.


            As of May 2021. NUTS has changed to International Territorial Levels
            (ITL). Postcodes.io will report ITL in nuts and codes.nuts to
            preserve backwards compatibility.


            Following the UK's withdrawal from the EU, a new UK-managed
            international statistical geography - ITL (International Territorial
            Levels) - was introduced from 1st January 2021, replacing the former
            NUTS classification. They align with international standards,
            enabling comparability both over time and internationally. To ensure
            continued alignment, the ITLs mirror the NUTS system. They also
            follow a similar review timetable, every three years.


            NUTS is a hierarchical classification of spatial units that provides
            a breakdown of the European Union's territory for producing regional
            statistics that are comparable across the Union.


            The ITL area classification in the UK comprises current national
            administrative and electoral areas, except in Scotland where some
            ITL areas comprise whole and/or part Local Enterprise Regions.


            The ONSPD contains the LAU1 code (9-character LAD/UA code for
            England, Wales and Northern Ireland and 'S30' code for Scotland). A
            comprehensive lookup of LAU and ITL codes is included with the
            accompanying metadata.
          example: Westminster
        codes:
          title: Returns an ID or Code associated with the postcode
          type: Object
          description: >-
            Typically, these are a 9 character code known as an ONS Code or GSS
            Code. This is currently only available for districts, parishes,
            counties, CCGs, NUTS and wards.
          required:
            - admin_district
            - admin_county
            - admin_ward
            - parish
            - ccg
            - ccg_code
            - nuts
            - lau2
            - lsoa
            - msoa
          properties:
            admin_district:
              title: GSS Code for Administrative County
              type: string
              x-nullable: true
              description: See description of admin_district field.
              example: ''
            admin_county:
              title: ''
              type: string
              x-nullable: true
              description: See description of admin_county field.
              example: ''
            admin_ward:
              title: ''
              type: string
              x-nullable: true
              description: See description of admin_ward field.
              example: ''
            parish:
              title: ''
              type: string
              x-nullable: true
              description: See description of parish field.
              example: ''
            ccg:
              title: ''
              type: string
              x-nullable: true
              description: See description of ccg field.
              example: ''
            ccg_code:
              title: CCG Code
              type: string
              x-nullable: true
              description: CCG Short Code
              example: 07N
            nuts:
              title: ''
              type: string
              x-nullable: true
              description: The ITL code associated with the postcode.
              example: ''
            lau2:
              title: LAU2
              type: string
              x-nullable: true
              description: The LAU2 code associated with the postcode.
              example: ''
            lsoa:
              title: ''
              type: string
              x-nullable: true
              description: See description of lsoa field.
              example: ''
            msoa:
              title: ''
              type: string
              x-nullable: true
              description: See description of msoa field.
              example: ''
    PostcodeResponse:
      title: Postcode Response
      type: object
      required:
        - message
        - code
        - result
      properties:
        result:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Postcode'
          description: Data for a given postcode
        code:
          type: integer
          format: int32
          enum:
            - 2000
        message:
          type: string
          enum:
            - Success
    ApiKeyParam:
      title: API Key
      type: string
      description: |
        Your API Key. Typically beings `ak_`.
        Available from your dashboard
      example: ak_test
    CountryIsoParam:
      title: Country
      type: string
      description: >-
        Filter by country ISO code. Uses 3 letter country code (ISO 3166-1)
        standard. Filter by multiple countries with a comma separated list. E.g.
        `GBR,IRL`
      example: GBR
    BiasCountryIsoParam:
      title: Country
      type: string
      description: >-
        Bias by country ISO code. Uses 3 letter country code (ISO 3166-1)
        standard. Bias by multiple countries with a comma separated list. E.g.
        `GBR,IRL`
      example: GBR
    BiasLonLatParam:
      title: Bias Lon/Lat
      type: string
      description: >-
        Bias search to a geospatial circle determined by an origin and radius in
        meters. Max radius is `50000`.  Uses the format
        bias_lonlat=[longitude],[latitude],[radius in metres] Only one
        geospatial bias may be provided
      example: '-2.095,57.15,100'
    BiasIpParam:
      title: Bias query by Geolocation of IP
      type: string
      enum:
        - 'true'
      description: >-
        Biases search based on approximate geolocation of IP address. Set
        `bias_ip=true` to enable.
      example: 'true'
    place_name:
      title: Place Name
      type: string
      description: |
        Place name
      example: London
    place_descriptive_name:
      title: Descriptive Place Name
      type: string
      description: |
        Longer form description of the place.
      example: London, United Kingdom
    place_country_iso:
      title: Country
      type: string
      description: 3 letter country code (ISO 3166-1)
      example: GBR
    place_id:
      title: ID
      type: string
      description: |
        Unique identifier for place
      example: geonames_5324
    PlaceSuggestion:
      title: Place Description
      description: |
        Represents a possible place given an autocomplete query.
      required:
        - name
        - descriptive_name
        - id
        - country_iso
      properties:
        name:
          $ref: '#/components/schemas/place_name'
        descriptive_name:
          $ref: '#/components/schemas/place_descriptive_name'
        country_iso:
          $ref: '#/components/schemas/place_country_iso'
        id:
          $ref: '#/components/schemas/place_id'
    PlaceResponse:
      title: Place Search Response
      type: object
      required:
        - message
        - code
        - result
      properties:
        code:
          type: integer
          format: int32
          enum:
            - 2000
        message:
          type: string
          enum:
            - Success
        result:
          type: object
          required:
            - hits
          properties:
            hits:
              type: array
              description: |
                List of up to 10 matching places
              items:
                oneOf:
                  - $ref: '#/components/schemas/PlaceSuggestion'
    ErrorResponse:
      title: Basic Error Response
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: >-
            API Response Code. Non `2xxx` code indicates a failure. This code
            will provide a more specific reason when a failure occurs and
            facilitates debugging.
          format: int32
        message:
          type: string
          description: Human readable error message supplied with every error response.
    BadRequestResponse:
      title: Bad Request Error Response
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          required:
            - code
            - message
          properties:
            code:
              type: integer
              description: '`400X` type error response code'
              format: int32
            message:
              type: string
              description: Bad request error description
            errors:
              type: array
              items:
                type: object
                required:
                  - path
                  - message
                properties:
                  message:
                    type: string
                    example: should have required property 'type'
                    description: >-
                      Indicates location of error in request query or URL
                      parameter
                  path:
                    type: string
                    example: .query.type
                    description: >-
                      Indicates location of error in request query or URL
                      parameter
                  errorCode:
                    type: string
                    example: required.openapi.validation
